# This is a basic workflow to help you get started with Actions

name: CI Test Package

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'master'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "CI"
  CI:
    env:
      db_name: silkyRoad
      db_user: root
      db_password: root
      db_port: 3307
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      
      - name: Set up dockerized mysql
        run: docker-compose -f docker/docker-mysql/docker-compose.yml up -d
        
      - name: Run Single Test - Force DB structure creation by Entity Framework
        run : mvn test -Dtest=AmtDemoApplicationTests#success test
        
      - name: Populate database with mockdata
        run: sh ./docker/docker-mysql/mockdata/populate_database.sh ${{ env.db_port }} ${{ env.db_name }} ${{ env.db_user }} ${{ env.db_password }}
          
      # Runs a single command using the runners shell
      - name: Run All Tests
        run: mvn test

      # Runs a set of commands using the runners shell
      - name: Stop dockerized mysql
        run: docker-compose -f docker/docker-mysql/docker-compose.yml down
